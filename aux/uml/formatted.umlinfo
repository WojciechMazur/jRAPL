===========ArchSpec===============
final class ArchSpec
+ NUM_SOCKETS  final int 
+ NUM_STATS_PER_SOCKET  final int 
+ RAPL_WRAPAROUND  final double 
+ MICRO_ARCHITECTURE  final int 
+ MICRO_ARCHITECTURE_NAME  final String 
+ DRAM_IDX  final int 
+ GPU_IDX  final int 
+ CORE_IDX  final int 
+ PKG_IDX  final int 
+ DRAM_SUPPORTED  final boolean 
+ GPU_SUPPORTED  final boolean 
+ CORE_SUPPORTED  final boolean 
+ PKG_SUPPORTED  final boolean 
- getSocketNum()   int 
- getWraparoundEnergy() double 
- getMicroArchitectureName() String 
- getMicroArchitecture() int 
- energyStatsStringFormat() String 
+ init() void 
+ infoString() String 
==================
===========AsyncEnergyMonitorCSide===============

class AsyncEnergyMonitorCSide extends AsyncEnergyMonitor

- startNative() void 
- stopNative() void 
- resetNative() void 
- activateNative(int,int,int) void 
- deactivateNative() void 
- writeFileCSVNative(String) void 
- getLastKSamplesNative(int) String 
- getLastKTimestampsNative(int) long[] 
- getNumSamplesNative() int 
- setSamplingRateNative(int) void 
- getSamplingRateNative() int 
- DYNAMIC_ARRAY_STORAGE int 
- LINKED_LIST_STORAGE int 
- samplingRate int 
- storageType int 
- initialSize  int 
+ AsyncEnergyMonitorCSide()
+ AsyncEnergyMonitorCSide(int, String, int)
+ AsyncEnergyMonitorCSide(String)
==================
===========AsyncEnergyMonitor===============
abstract class AsyncEnergyMonitor extends EnergyMonitor
# monitorStartTime Instant  
# monitorStopTime Instant  
# isRunning boolean  
# samplingRat int e
+ getNumSamples() abstract int 
+ setSamplingRate(int s) abstract void 
+ getSamplingRate() abstract int 
+ getLifetime() Duration 
+ start() void 
+ stop() void 
+ reset() void 
+ abstract Instant[] getLastKTimestamps(int)
+ abstract String[] getLastKSamples(int)
+ getLastKSamples_Objects(int) EnergyStats[] 
+ getLastKSamples_Arrays(int) double[][] 
+ isRunning() boolean 
+ writeFileCSV(String) void 
+ writeFileMetadata(String) void 
==================
===========AsyncEnergyMonitorJavaSide===============
AsyncEnergyMonitorJavaSide extends AsyncEnergyMonitor implements Runnable {
+ AsyncEnergyMonitorJavaSide()
+ AsyncEnergyMonitorJavaSide(int)
- ArrayList<String> samples
- samplingRate int
- exit volatile boolean
- t Thread
}
==================
===========DvfsEnergyController===============
DvfsEnergyController extends EnergyController {
+ scale(int)   int 
+ freqAvailable()   int[] 
+ SetGovernor(String)   void 
==================
===========EnergyController===============
public class EnergyController extends EnergyManager {
}
==================
===========EnergyDiff===============
EnergyDiff extends EnergySample
+ EnergyDiff(double[], Duration)
- elapsedTime Duration
+ setElapsedTime(Duration) void 
+ getElapsedTime() Duration 
+ csvHeader()  String 
+ between(EnergyStats, EnergyStats) EnergyDiff 
==================
===========EnergyManager===============
EnergyManager
- boolean active 
- boolean libraryLoaded 
- int energyManagersActive 
- void profileInit()
- void profileDealloc()
- void loadNativeLibrary()
+ void activate()
+ void deactivate()
==================
===========EnergyMonitor===============

EnergyMonitor extends EnergyManager
# energyStatCheck()  String 
- stringArrayToDoubleArray(String[])  double[] 
# stringToPrimitiveSample(String)  double[] 
# stringToEnergyStats(String)  EnergyStats 
# subtractPrimitiveSamples(double[], double[])  double[] 
==================
===========EnergySample===============
+ abstract class EnergySample
{
+ EnergySample(double[])
+ EnergySample(EnergySample)
# csvHeader() String 
# String csv()
+ getPrimitiveSample() double[] 
- primitiveSample double[] 
- getEnergy(int, int) double 
+ getCore(int) double 
+ getCore() double 
+ getGpu(int) double 
+ getGpu() double 
+ getPackage(int) double 
+ getPackage() double 
+ getDram(int) double 
+ getDram() double 
}
==================
===========EnergyStats===============

EnergyStats extends EnergySample
- Instant timestamp
+ EnergyStats(double[], Instant)
+ EnergyStats(EnergyStats)
+ csvHeader() String 
+ getTimestamp() Instant 
+ setTimestamp(Instant) void 
==================
===========NativeUtils===============
NativeUtils
- MIN_PREFIX_LENGTH int  
+ String NATIVE_FOLDER_PATH_PREFIX
+ loadLibraryFromJar(String) void 
- temporaryDir File
- NativeUtils()
- isPosixCompliant() boolean 
- createTempDirectory(String) File 
==================
===========PowercapEnergyController===============
PowercapEnergyController extends EnergyController {
+ GetDramPowerSpec()   double[] 
+ SetPackagePowerLimit(int, int, double)   void 
+ SetPackageTimeWindowLimit(int, int, double)   void 
+ SetDramTimeWindowLimit(int, int, double)   void 
+ SetDramPowerLimit(int, int, double)   void 
+ SetPowerLimit(int)   void 
}
==================
===========SyncEnergyMonitor===============
SyncEnergyMonitor extends EnergyMonitor
+ getSample() EnergyStats 
+ getPrimitiveSample() double[] 
==================
===========Utils===============
Utils
+ usecToInstant(long)  Instant 
+ timestampToUsec(Instant)  long 
+ durationToUsec(Duration)  long 
==================
